[{"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\index.js":"1","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\reportWebVitals.js":"2","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\App.js":"3","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\index.js":"4","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\success.js":"5","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\newForm.js":"6","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\viewData.js":"7","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\time.js":"8","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\notFound.js":"9","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\tableFieldTemplate.js":"10","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\AddButton.js":"11","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\SelectUser.js":"12","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\actionsForm.js":"13","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\ActionsForm.js":"14","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\index.js":"15","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\user.js":"16","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\priority.js":"17","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\CalendarView.jsx":"18","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\chooseForm.jsx":"19","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\home.jsx":"20","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\chooseData.jsx":"21","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\fillForm.jsx":"22","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\editActions.jsx":"23","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\CellComponent.jsx":"24","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\MeetingNotes.jsx":"25"},{"size":663,"mtime":1611018068544,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1611018068565,"results":"28","hashOfConfig":"27"},{"size":1195,"mtime":1612258745011,"results":"29","hashOfConfig":"27"},{"size":573,"mtime":1611428108860,"results":"30","hashOfConfig":"27"},{"size":451,"mtime":1611018068559,"results":"31","hashOfConfig":"27"},{"size":9089,"mtime":1611018068556,"results":"32","hashOfConfig":"27"},{"size":509,"mtime":1611018068561,"results":"33","hashOfConfig":"27"},{"size":249,"mtime":1611018068563,"results":"34","hashOfConfig":"27"},{"size":273,"mtime":1611878765710,"results":"35","hashOfConfig":"27"},{"size":1848,"mtime":1612375591075,"results":"36","hashOfConfig":"27"},{"size":456,"mtime":1612259071351,"results":"37","hashOfConfig":"27"},{"size":1311,"mtime":1611989894380,"results":"38","hashOfConfig":"27"},{"size":3102,"mtime":1611431288129,"results":"39","hashOfConfig":"27"},{"size":4769,"mtime":1612259415618,"results":"40","hashOfConfig":"27"},{"size":116,"mtime":1611627929454,"results":"41","hashOfConfig":"27"},{"size":621,"mtime":1611627798438,"results":"42","hashOfConfig":"27"},{"size":641,"mtime":1611632135311,"results":"43","hashOfConfig":"27"},{"size":2856,"mtime":1611997189105,"results":"44","hashOfConfig":"27"},{"size":954,"mtime":1611868663304,"results":"45","hashOfConfig":"27"},{"size":341,"mtime":1611868685241,"results":"46","hashOfConfig":"27"},{"size":954,"mtime":1611868658395,"results":"47","hashOfConfig":"27"},{"size":4392,"mtime":1611868678844,"results":"48","hashOfConfig":"27"},{"size":340,"mtime":1611868672489,"results":"49","hashOfConfig":"27"},{"size":3177,"mtime":1611868650982,"results":"50","hashOfConfig":"27"},{"size":1339,"mtime":1611997172570,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"tgop5u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\index.js",[],["114","115"],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\reportWebVitals.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\App.js",["116"],"import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  Home,\r\n  NewForm,\r\n  ChooseForm,\r\n  FillForm,\r\n  Success,\r\n  ChooseData,\r\n  ViewData,\r\n  EditActions,\r\n  NotFound,\r\n} from \"./paths\";\r\nimport CalendarView from \"./paths/CalendarView\";\r\nimport MeetingNotes from \"./paths/MeetingNotes\";\r\nimport SelectUser from \"./paths/SelectUser\";\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home}></Route>\r\n        <Route path=\"/newForm\" component={NewForm}></Route>\r\n        <Route path=\"/chooseForm\" component={ChooseForm}></Route>\r\n        <Route path=\"/fillForm/:key\" component={FillForm}></Route>\r\n        <Route path=\"/success/:successId\" component={Success}></Route>\r\n        <Route path=\"/chooseData\" component={ChooseData}></Route>\r\n        <Route path=\"/viewData/:formId\" component={ViewData}></Route>\r\n        <Route path=\"/users\" component={SelectUser}></Route>\r\n        <Route path=\"/editActions\" component={EditActions}></Route>\r\n        <Route path=\"/calendarView\" component={CalendarView}></Route>\r\n        <Route component={MeetingNotes} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\index.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\success.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\newForm.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\viewData.js",["117","118"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nconst ViewData = () => {\r\n  const [data, setData] = useState(null);\r\n  const { formId } = useParams();\r\n  useEffect(() => {\r\n    axios.get(\"/viewData\", { params: { formId } }).then(\r\n      (res) => {\r\n        console.log(res);\r\n        setData(res.data);\r\n      },\r\n      (err) => console.log(\"error: \" + err)\r\n    );\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\nexport default ViewData;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\time.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\notFound.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\tableFieldTemplate.js",["119","120"],"import React from \"react\";\r\nimport _startCase from \"lodash/startCase\";\r\nimport CellComponent from \"./CellComponent\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport AddButton from \"./AddButton\";\r\n\r\nconst getCells = (props, columns, role, username) => {\r\n  const cols = columns.map((c) => c.dataField);\r\n  return props?.items?.map((rowProps) => {\r\n    const rowObject = {};\r\n    cols.forEach((c) => {\r\n      rowObject[c] = (\r\n        <CellComponent\r\n          {...rowProps}\r\n          column={c}\r\n          username={username}\r\n          role={role}\r\n        />\r\n      );\r\n    });\r\n    return rowObject;\r\n  });\r\n};\r\n\r\nconst TableFieldTemplate = (props) => {\r\n  console.log(props);\r\n  const { role, username } = props.schema.items;\r\n  let columns = [\r\n    {\r\n      dataField: \"username\",\r\n      text: \"Participant\",\r\n    },\r\n    {\r\n      dataField: \"actionItems\",\r\n      text: \"Action Items\",\r\n      style: { width: \"20%\" },\r\n    },\r\n    {\r\n      dataField: \"startDate\",\r\n      text: \"Start Date\",\r\n    },\r\n    {\r\n      dataField: \"effortInDays\",\r\n      text: \"Effort (in days)\",\r\n      style: { width: \"10%\" },\r\n    },\r\n    {\r\n      dataField: \"estCompletionDate\",\r\n      text: \"Est. Completion Date\",\r\n    },\r\n    { dataField: \"progress\", text: \"% of Progress\", style: { width: \"10%\" } },\r\n\r\n    { dataField: \"priority\", text: \"Priority\" },\r\n    { dataField: \"environment\", text: \"Environment\" },\r\n\r\n    { dataField: \"status\", text: \"Status\" },\r\n  ];\r\n  columns = columns.map((x) => ({ ...x, headerStyle: { color: \"grey\" } }));\r\n\r\n  const keyField = \"username\";\r\n  const data = getCells(props, columns, role, username);\r\n\r\n  return (\r\n    <>\r\n      {/* <AddButton onClick={props.onAddClick} /> */}\r\n      <BootstrapTable {...{ columns, data, keyField, bordered: false }} />\r\n    </>\r\n  );\r\n};\r\nexport default TableFieldTemplate;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\AddButton.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\SelectUser.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\actionsForm.js",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\ActionsForm.js",["121","122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport widgets from \"./widgets\";\r\n\r\nimport Form from \"@rjsf/core\";\r\nimport TableFieldTemplate from \"./tableFieldTemplate\";\r\nvar moment = require(\"moment-business-days\");\r\n\r\nconst ActionsForm = (props) => {\r\n  const [actions, setActions] = useState([]);\r\n  const [formData, setFormData] = useState(null);\r\n  const [downloadDisabled, setDownloadDisabled] = useState(true);\r\n  useEffect(() => {\r\n    axios.get(\"/actionItems\").then(\r\n      (resp) => setActions(resp.data),\r\n      (err) => console.log(err)\r\n    );\r\n  }, []);\r\n  let { username, role, participants } = props;\r\n\r\n  useEffect(() => {\r\n    let p;\r\n    const actionData = [];\r\n    for (p of participants) {\r\n      let i = actions.findIndex((a) => a.username === p.username);\r\n      if (i === -1) {\r\n        actionData.push({ username: p.username });\r\n      } else {\r\n        actionData.push(actions[i]);\r\n      }\r\n    }\r\n    setFormData({ actions: actionData });\r\n  }, [actions]);\r\n\r\n  const schema = {\r\n    type: \"object\",\r\n    properties: {\r\n      actions: {\r\n        type: \"array\",\r\n        items: {\r\n          type: \"object\",\r\n          properties: {\r\n            username: {\r\n              type: \"string\",\r\n              default: \"\",\r\n            },\r\n            actionItems: {\r\n              type: \"string\",\r\n            },\r\n            startDate: {\r\n              type: \"string\",\r\n              format: \"date\",\r\n              default: moment().format(\"YYYY-MM-DD\"),\r\n            },\r\n            effortInDays: {\r\n              type: \"number\",\r\n              default: 5,\r\n            },\r\n            estCompletionDate: {\r\n              type: \"string\",\r\n              format: \"date\",\r\n            },\r\n            progress: {\r\n              type: \"number\",\r\n              default: 0,\r\n            },\r\n            priority: {\r\n              type: \"string\",\r\n              enum: [\"Low\", \"Medium\", \"High\"],\r\n              default: \"Medium\",\r\n            },\r\n            environment: {\r\n              type: \"string\",\r\n              enum: [\r\n                \"Planning\",\r\n                \"Development\",\r\n                \"Staging\",\r\n                \"Test\",\r\n                \"Production\",\r\n              ],\r\n              default: \"Planning\",\r\n            },\r\n            status: {\r\n              type: \"string\",\r\n              enum: [\r\n                \"Not started\",\r\n                \"In progress\",\r\n                \"Completed\",\r\n                \"Research\",\r\n                \"Troubleshooting\",\r\n              ],\r\n              default: \"Not started\",\r\n            },\r\n          },\r\n          required: [\"actionItems\", \"effortInDays\", \"status\"],\r\n          role: role,\r\n          username: username,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const uiSchema = {\r\n    actions: {\r\n      items: {\r\n        username: {\r\n          \"ui:widget\": \"user\",\r\n        },\r\n        actionItems: {\r\n          \"ui:widget\": \"textarea\",\r\n          \"ui:options\": {\r\n            maxRows: 3,\r\n          },\r\n        },\r\n        estCompletionDate: {\r\n          \"ui:readonly\": true,\r\n        },\r\n        progress: {\r\n          \"ui:readonly\": true,\r\n        },\r\n        // priority: {\r\n        //   \"ui:widget\": \"priority\",\r\n        // },\r\n      },\r\n    },\r\n  };\r\n  const onSubmit = (data) => {\r\n    console.log(data.formData);\r\n    axios.post(\"/submitActions\", data.formData).then(\r\n      (res) => {\r\n        console.log(res.data.mesg);\r\n        setFormData(data.formData);\r\n        setDownloadDisabled(false);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  const columns = [\r\n    {\r\n      key: \"username\",\r\n      label: \"Participant\",\r\n    },\r\n    {\r\n      key: \"actionItems\",\r\n      label: \"Action Items\",\r\n    },\r\n    {\r\n      key: \"startDate\",\r\n      label: \"Start Date\",\r\n    },\r\n    {\r\n      key: \"effortInDays\",\r\n      label: \"Effort (in days)\",\r\n    },\r\n    {\r\n      key: \"estCompletionDate\",\r\n      label: \"Est. Completion Date\",\r\n    },\r\n    { key: \"progress\", label: \"% of Progress\" },\r\n    { key: \"status\", label: \"Status\" },\r\n  ];\r\n  const onChange = () => {\r\n    setDownloadDisabled(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Form\r\n        {...{\r\n          schema,\r\n          uiSchema,\r\n          onSubmit,\r\n          formData,\r\n          onChange,\r\n          ArrayFieldTemplate: TableFieldTemplate,\r\n          widgets,\r\n        }}\r\n      />\r\n      {/* <Link to=\"/users\">Go Home</Link> */}\r\n      {downloadDisabled ? (\r\n        <></>\r\n      ) : (\r\n        <button>\r\n          <CSVLink data={formData.actions} headers={columns}>\r\n            Download data\r\n          </CSVLink>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionsForm;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\index.js",["124"],"import User from \"./user\";\r\nimport Priority from \"./priority\";\r\nexport default { user: User, priority: Priority };\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\user.js",[],["125","126"],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\widgets\\priority.js",["127"],"import React from \"react\";\r\nimport Select from \"react-select\";\r\nconst Priority = (props) => {\r\n  console.log(props);\r\n  switch (props.value) {\r\n    case \"Low\":\r\n      return (\r\n        <span {...props} className={\"badge badge-pill badge-warning\"}>\r\n          Low\r\n        </span>\r\n      );\r\n    case \"High\":\r\n      return (\r\n        <span {...props} className={\"badge badge-pill badge-danger\"}>\r\n          High\r\n        </span>\r\n      );\r\n    case \"Medium\":\r\n    default:\r\n      return (\r\n        <span {...props} className={\"badge badge-pill badge-success\"}>\r\n          Medium\r\n        </span>\r\n      );\r\n  }\r\n};\r\nexport default Priority;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\CalendarView.jsx",["128"],"import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport _capitalize from \"lodash/capitalize\";\r\nimport Avatar from \"react-avatar\";\r\nimport axios from \"axios\";\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nconst CalendarView = (props) => {\r\n  const [actionsList, setActionsList] = useState([]);\r\n  const [actions, setActions] = useState([]);\r\n  useEffect(() => {\r\n    if (props.meeting) {\r\n      setActions(props.actions);\r\n      console.log(props.actions);\r\n    } else {\r\n      axios.get(\"/actionItems\").then(\r\n        (resp) => {\r\n          setActions(resp.data);\r\n          console.log(\">>\");\r\n        },\r\n        (err) => console.log(err)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setActionsList(\r\n      actions?.map((a, idx) => {\r\n        const {\r\n          actionItems: title,\r\n          startDate: start,\r\n          estCompletionDate: end,\r\n          ...remaining\r\n        } = a;\r\n        var hash =\r\n          \"#\" + CryptoJS.MD5(remaining.username).toString().substr(0, 6);\r\n\r\n        console.log(hash);\r\n        return {\r\n          id: idx,\r\n          title: (\r\n            <>\r\n              <Avatar\r\n                color={hash}\r\n                name={_capitalize(remaining.username.split(\".\")[2])}\r\n                size={20}\r\n                round={true}\r\n              />{\" \"}\r\n              {title}\r\n            </>\r\n          ),\r\n          start: new Date(start),\r\n          end: new Date(end),\r\n          allDay: true,\r\n          resource: remaining,\r\n        };\r\n      })\r\n    );\r\n  }, [actions]);\r\n\r\n  console.log(actionsList);\r\n\r\n  const localizer = momentLocalizer(moment);\r\n  let allViews = Object.keys(Views).map((k) => Views[k]);\r\n\r\n  console.log(allViews);\r\n  return actionsList?.length === 0 ? (\r\n    <></>\r\n  ) : (\r\n    <>\r\n      <Calendar\r\n        defaultView={\"work_week\"}\r\n        views={[\"work_week\", \"month\"]}\r\n        localizer={localizer}\r\n        events={actionsList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        popup={true}\r\n        // components={{\r\n        //   timeSlotWrapper: () => <></>,\r\n        //   // eventWrapper: (eventWrapperProps) => {\r\n        //   //   console.log(eventWrapperProps);\r\n        //   //   const style = {\r\n        //   //     border: \"4px solid\",\r\n        //   //     borderColor:\r\n        //   //       eventWrapperProps.event.start.getHours() % 2 === 0\r\n        //   //         ? \"green\"\r\n        //   //         : \"red\",\r\n        //   //     padding: \"5px\",\r\n        //   //   };\r\n        //   //   return <div style={style}>{eventWrapperProps.children}</div>;\r\n        //   // },\r\n        // }}\r\n        style={{ height: 500 }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\chooseForm.jsx",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\home.jsx",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\chooseData.jsx",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\fillForm.jsx",["129"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Form from \"@rjsf/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst FillForm = () => {\r\n  const [formInfo, setFormInfo] = useState({});\r\n  const [ready, setReady] = useState(false);\r\n  const { key: formKey } = useParams();\r\n\r\n  const history = useHistory();\r\n  console.log(formKey);\r\n  useEffect(() => {\r\n    axios.get(\"/fillForm\", { params: { id: formKey } }).then(\r\n      (res) => {\r\n        setFormInfo(res.data);\r\n        setReady(true);\r\n      },\r\n      (err) => console.log(\"error: \" + err)\r\n    );\r\n  }, []);\r\n  console.log(formInfo);\r\n  const getAnswerType = (num) => {\r\n    switch (num) {\r\n      case 1:\r\n        return \"string\";\r\n      case 2:\r\n        return \"string\";\r\n      case 3:\r\n        return \"string\";\r\n      case 4:\r\n        return \"array\";\r\n      case 5:\r\n        return \"number\";\r\n      case 6:\r\n        return \"string\";\r\n      // format: \"data-url\",\";\r\n      case 7:\r\n        return \"integer\";\r\n      case 8:\r\n        return \"string\";\r\n      case 9:\r\n        return \"string\";\r\n      // case 10:\r\n      //   return \"\";\r\n      // case 11:\r\n      //   return \"\";\r\n      default:\r\n        return \"string\";\r\n    }\r\n  };\r\n  const getFormatType = (num) => {\r\n    switch (num) {\r\n      case 6:\r\n        return \"data-url\";\r\n\r\n      case 8:\r\n        return \"date\";\r\n      case 9:\r\n        return \"time\";\r\n      // case 10:\r\n      //   return \"\";\r\n      // case 11:\r\n      //   return \"\";\r\n      default:\r\n        return undefined;\r\n    }\r\n  };\r\n  const getUiSchema = (x) => {\r\n    switch (x.answer.ansType) {\r\n      case 1:\r\n        return {};\r\n      case 2:\r\n        return {\r\n          \"ui:widget\": \"textarea\",\r\n          \"ui:options\": { rows: 2 },\r\n        };\r\n      case 3:\r\n        return {\r\n          \"ui:widget\": \"radio\",\r\n        };\r\n      case 4:\r\n        return {\r\n          \"ui:widget\": \"checkboxes\",\r\n        };\r\n      case 5:\r\n        return {\r\n          \"ui:widget\": \"select\",\r\n        };\r\n      case 6: {\r\n        //fileupload\r\n        return {};\r\n      }\r\n      case 7: //linearscale\r\n        return {\r\n          \"ui:widget\": \"range\",\r\n        };\r\n      case 8:\r\n        return {};\r\n\r\n      case 9:\r\n        return {\r\n          \"ui:widget\": \"timeWidget\",\r\n        };\r\n      default:\r\n        return {\r\n          \"ui:widget\": \"textarea\",\r\n        };\r\n    }\r\n  };\r\n  const getSchema = (x) => {\r\n    console.log(x);\r\n    let itemSchema = {\r\n      title: x.question,\r\n      type: getAnswerType(x.answer.ansType),\r\n      format: getFormatType(x.answer.ansType),\r\n      enum: x.answer.options?.map((o) => o.option),\r\n      enumNames: x.answer.options?.map((o) => o.option),\r\n      minimum: x?.answer?.minimum,\r\n      maximum: x?.answer?.maximum,\r\n      step: x?.answer?.step,\r\n    };\r\n    switch (x.answer.ansType) {\r\n      case 1:\r\n      case 2:\r\n      case 4:\r\n        return {\r\n          ...itemSchema,\r\n          items: {\r\n            type: \"string\",\r\n            enum: x.answer.options?.map((o) => o.option),\r\n          },\r\n          uniqueItems: true,\r\n        };\r\n      case 3:\r\n      case 5:\r\n      case 6:\r\n      case 7:\r\n      case 8:\r\n      default:\r\n        return itemSchema;\r\n    }\r\n  };\r\n  let schema = { type: \"object\", properties: {} };\r\n  let uiSchema = {};\r\n  const submit = (val) => {\r\n    console.log(val.formData);\r\n    const data = Object.keys(val.formData).map((x) => val.formData[x]);\r\n    axios.post(\"/completeForm\", { id: formKey, data }).then(\r\n      (response) => {\r\n        console.log(response);\r\n        history.push(\"/success/2\");\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  const onChange = (val) => {\r\n    console.log(val);\r\n  };\r\n  if (ready) {\r\n    formInfo?.content?.forEach((x, idx) => {\r\n      schema = {\r\n        ...schema,\r\n        properties: {\r\n          ...schema.properties,\r\n          [idx]: getSchema(x),\r\n        },\r\n      };\r\n      uiSchema[idx] = getUiSchema(x);\r\n    });\r\n    console.log(schema);\r\n\r\n    return (\r\n      <div>\r\n        <h3>{formInfo.title}</h3>\r\n        <h5>{formInfo.description}</h5>\r\n        <Form\r\n          schema={schema}\r\n          uiSchema={uiSchema}\r\n          onChange={onChange}\r\n          onSubmit={submit}\r\n          noValidate={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default FillForm;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\editActions.jsx",[],"C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\CellComponent.jsx",["130","131"],"import SchemaField from \"@rjsf/core/lib/components/fields/SchemaField\";\r\nimport React, { Component } from \"react\";\r\nimport _round from \"lodash/round\";\r\nvar moment = require(\"moment-business-days\");\r\nclass CellComponent extends Component {\r\n  static defaultProps = {\r\n    uiSchema: {},\r\n    formData: {},\r\n    errorSchema: {},\r\n    idSchema: {},\r\n    required: false,\r\n    disabled: false,\r\n    readonly: false,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n  isRequired(name) {\r\n    const schema = this.props.children.props.schema;\r\n    return (\r\n      Array.isArray(schema?.required) && schema?.required.indexOf(name) !== -1\r\n    );\r\n  }\r\n\r\n  onPropertyChange = (name) => {\r\n    return (value, errorSchema) => {\r\n      const newFormData = {\r\n        ...this.props.children.props.formData,\r\n        [name]: value,\r\n      };\r\n      this.props.children.props.onChange(\r\n        newFormData,\r\n        errorSchema &&\r\n          this.props.children.props.errorSchema && {\r\n            ...this.props.children.props.errorSchema,\r\n            [name]: errorSchema,\r\n          }\r\n      );\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      schema,\r\n      uiSchema,\r\n      idSchema,\r\n      idPrefix,\r\n      formData,\r\n      disabled,\r\n      errorSchema,\r\n      onBlur,\r\n      onFocus,\r\n      registry,\r\n    } = this.props.children.props;\r\n    const name = this.props.column;\r\n    let uiOptions = {};\r\n    let uiReadonly;\r\n    if (Object.keys(uiSchema[name] ?? {}).includes(\"ui:options\")) {\r\n      uiOptions = { ...uiSchema[name][\"ui:options\"] };\r\n    }\r\n    uiOptions[\"label\"] = false;\r\n    if (Object.keys(uiSchema[name] ?? {}).includes(\"ui:readonly\")) {\r\n      uiReadonly = uiSchema[name][\"ui:readonly\"];\r\n    } else {\r\n      uiReadonly = false;\r\n    }\r\n\r\n    if (name == \"estCompletionDate\") {\r\n      formData[name] = moment(formData[\"startDate\"])\r\n        .businessAdd(formData[\"effortInDays\"])\r\n        .format(\"YYYY-MM-DD\");\r\n    }\r\n    if (name == \"progress\") {\r\n      formData[name] = Math.min(\r\n        _round(\r\n          (moment().businessDiff(moment(formData[\"startDate\"], \"YYYY-MM-DD\")) /\r\n            formData[\"effortInDays\"]) *\r\n            100,\r\n          2\r\n        ),\r\n        100\r\n      );\r\n    }\r\n\r\n    if (\r\n      [\r\n        \"username\",\r\n        \"actionItems\",\r\n        \"startDate\",\r\n        \"effortInDays\",\r\n        \"status\",\r\n      ].includes(name)\r\n    ) {\r\n      uiReadonly =\r\n        this.props.role === \"guest\" &&\r\n        this.props.username !== formData[\"username\"];\r\n    }\r\n    return (\r\n      <SchemaField\r\n        key={name}\r\n        name={name}\r\n        schema={schema.properties[name]}\r\n        required={this.isRequired(name)}\r\n        uiSchema={{\r\n          ...uiSchema[name],\r\n          \"ui:options\": uiOptions,\r\n        }}\r\n        errorSchema={errorSchema[name]}\r\n        idSchema={idSchema[name]}\r\n        idPrefix={idPrefix}\r\n        formData={(formData || {})[name]}\r\n        onChange={this.onPropertyChange(name)}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        registry={registry}\r\n        disabled={disabled}\r\n        readonly={uiReadonly}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default CellComponent;\r\n","C:\\Users\\nikhil\\Desktop\\collabnow\\client\\src\\paths\\MeetingNotes.jsx",["132"],"import React, { useState } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport CalendarView from \"./CalendarView\";\r\nimport EditActions from \"./editActions\";\r\nimport axios from \"axios\";\r\n\r\nconst MeetingNotes = (props) => {\r\n  const [meetingActions, setMeetingActions] = useState([]);\r\n  const [allActions, setAllActions] = useState([]);\r\n  console.log(props);\r\n\r\n  return (\r\n    <Tabs>\r\n      <TabList>\r\n        <Tab>Meeting Notes</Tab>\r\n        <Tab>Calendar</Tab>\r\n      </TabList>\r\n\r\n      <TabPanel>\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Action Items</Tab>\r\n            <Tab>View in calendar</Tab>\r\n          </TabList>\r\n\r\n          <TabPanel>\r\n            <EditActions {...props} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {axios.get(\r\n              \"/actionItems\",\r\n              { params: { meetingId: 0 } },\r\n              (resp) => {\r\n                setMeetingActions(resp.data);\r\n              },\r\n              (err) => console.log(err)\r\n            )}\r\n            <CalendarView actions={meetingActions} meeting={true} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </TabPanel>\r\n      <TabPanel>\r\n        <CalendarView actions={allActions} />\r\n      </TabPanel>\r\n    </Tabs>\r\n  );\r\n};\r\nexport default MeetingNotes;\r\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":12,"column":3,"nodeType":"139","messageId":"140","endLine":12,"endColumn":11},{"ruleId":"137","severity":1,"message":"141","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":16,"column":6,"nodeType":"144","endLine":16,"endColumn":8,"suggestions":"145"},{"ruleId":"137","severity":1,"message":"146","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"147","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":17},{"ruleId":"137","severity":1,"message":"148","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":27,"column":33,"nodeType":"151","messageId":"152","endLine":27,"endColumn":65},{"ruleId":"142","severity":1,"message":"153","line":35,"column":6,"nodeType":"144","endLine":35,"endColumn":15,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":1,"nodeType":"157","endLine":3,"endColumn":51},{"ruleId":"133","replacedBy":"158"},{"ruleId":"135","replacedBy":"159"},{"ruleId":"137","severity":1,"message":"160","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"161","line":26,"column":6,"nodeType":"144","endLine":26,"endColumn":8,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"163","line":22,"column":6,"nodeType":"144","endLine":22,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":69,"column":14,"nodeType":"167","messageId":"168","endLine":69,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":74,"column":14,"nodeType":"167","messageId":"168","endLine":74,"endColumn":16},{"ruleId":"137","severity":1,"message":"169","line":10,"column":22,"nodeType":"139","messageId":"140","endLine":10,"endColumn":35},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formId'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'_startCase' is defined but never used.","'AddButton' is defined but never used.","'Link' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'p'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'participants'. Either include it or remove the dependency array.",["173"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["170"],["171"],"'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'props.actions' and 'props.meeting'. Either include them or remove the dependency array. If 'setActions' needs the current value of 'props.actions', you can also switch to useReducer instead of useState and read 'props.actions' in the reducer.",["174"],"React Hook useEffect has a missing dependency: 'formKey'. Either include it or remove the dependency array.",["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setAllActions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [formId]",{"range":"184","text":"185"},"Update the dependencies array to be: [actions, participants]",{"range":"186","text":"187"},"Update the dependencies array to be: [props.actions, props.meeting]",{"range":"188","text":"189"},"Update the dependencies array to be: [formKey]",{"range":"190","text":"191"},[454,456],"[formId]",[1087,1096],"[actions, participants]",[826,828],"[props.actions, props.meeting]",[659,661],"[formKey]"]